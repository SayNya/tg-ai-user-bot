"""update

Revision ID: 319d447460ed
Revises: 3d73665b075b
Create Date: 2025-05-11 16:17:38.134067

"""

from collections.abc import Sequence
from typing import Union

import sqlalchemy as sa
from alembic import op

# revision identifiers, used by Alembic.
revision: str = "319d447460ed"
down_revision: Union[str, None] = "3d73665b075b"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""

    sendertype_enum = sa.Enum("user", "bot", name="sendertype")
    sendertype_enum.create(op.get_bind(), checkfirst=True)

    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column("chats", sa.Column("is_active", sa.Boolean(), nullable=False))
    op.create_unique_constraint(
        "uix_chat_user",
        "chats",
        ["telegram_chat_id", "user_id"],
    )
    op.add_column(
        "messages",
        sa.Column(
            "sender_type",
            sa.Enum("user", "bot", name="sendertype"),
            nullable=False,
        ),
    )
    op.add_column(
        "messages",
        sa.Column("sender_username", sa.String(length=32), nullable=True),
    )
    op.add_column("messages", sa.Column("confidence_score", sa.Float(), nullable=True))
    op.drop_constraint("messages_user_id_fkey", "messages", type_="foreignkey")
    op.drop_column("messages", "user_id")
    op.drop_column("messages", "sender")
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column(
        "messages",
        sa.Column("sender", sa.VARCHAR(), autoincrement=False, nullable=False),
    )
    op.add_column(
        "messages",
        sa.Column("user_id", sa.INTEGER(), autoincrement=False, nullable=True),
    )
    op.create_foreign_key(
        "messages_user_id_fkey",
        "messages",
        "users",
        ["user_id"],
        ["id"],
    )
    op.drop_column("messages", "confidence_score")
    op.drop_column("messages", "sender_username")
    op.drop_column("messages", "sender_type")
    op.drop_constraint("uix_chat_user", "chats", type_="unique")
    op.drop_column("chats", "is_active")
    # ### end Alembic commands ###

    sendertype_enum = sa.Enum("user", "bot", name="sendertype")
    sendertype_enum.drop(op.get_bind(), checkfirst=True)
