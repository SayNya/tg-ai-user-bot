import orjson
from aio_pika import IncomingMessage
from aiogram import Bot, Dispatcher
from aiogram.fsm.context import FSMContext
from aiogram.fsm.storage.base import StorageKey
from src.data import settings
from src.enums import QueueName, RegistrationStatus
from src.rabbitmq import register_consumer
from src.tg_bot.states.user import UserRegistration


@register_consumer(QueueName.TELEGRAM_STATUS)
async def handle_registration_status(
    message: IncomingMessage,
    bot: Bot,
    dispatcher: Dispatcher,
) -> None:
    async with message.process():
        data = orjson.loads(message.body)
        user_id = data["user_id"]
        status = data["status"]

        state = FSMContext(
            storage=dispatcher.fsm.storage,
            key=StorageKey(bot_id=settings.bot.id, chat_id=user_id, user_id=user_id),
        )

        state_data = await state.get_data()
        working_message_id = state_data.get("working_message_id")

        if status == RegistrationStatus.CODE_SENT.value:
            await bot.edit_message_text(
                """üîπ –í–≤–µ–¥–∏—Ç–µ –∫–æ–¥ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è üîπ

–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–∫–∞–∂–∏—Ç–µ –∫–æ–¥, –∫–æ—Ç–æ—Ä—ã–π –ø—Ä–∏—à–µ–ª –≤–∞–º –≤ Telegram, –≤ —Ñ–æ—Ä–º–∞—Ç–µ:
üìå "123_45"

‚ùó –û–±—Ä–∞—Ç–∏—Ç–µ –≤–Ω–∏–º–∞–Ω–∏–µ –Ω–∞ –Ω–∏–∂–Ω–µ–µ –ø–æ–¥—á–µ—Ä–∫–∏–≤–∞–Ω–∏–µ –º–µ–∂–¥—É —á–∏—Å–ª–∞–º–∏!""",
                chat_id=user_id,
                message_id=working_message_id,
            )

            await state.set_state(UserRegistration.tg_code)
        elif status == RegistrationStatus.PASSWORD_REQUIRED.value:
            await bot.edit_message_text(
                "–í–≤–µ–¥–∏—Ç–µ 2fa –ø–∞—Ä–æ–ª—å:",
                chat_id=user_id,
                message_id=working_message_id,
            )
            await state.set_state(UserRegistration.password)
        elif status == RegistrationStatus.REGISTERED.value:
            await bot.edit_message_text(
                "‚úÖ –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–æ –∑–∞–≤–µ—Ä—à–µ–Ω–∞! ‚úÖ",
                chat_id=user_id,
                message_id=working_message_id,
            )
            await state.clear()
        elif status == RegistrationStatus.ERROR.value:
            error = data.get("error", {})
            await bot.send_message(
                chat_id=user_id,
                text=f"‚ùå –û—à–∏–±–∫–∞: {error.get('message', '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞')}",
            )
            await state.clear()
